Question 1. What is the purpose of having an individual handler function for each exception/interrupt? (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)

Answer: The purpose of having an indivudual handler function for every interrupt even if all interrupts are delivered to the same handler, is to have possiblity to distinguish what kind of interrupt/exeption we are handling right now and maybe do something differently for specific interrupts/exeptions.


Question 2. Did you have to do anything to make the user/softint program behave correctly? The grade script expects it to produce a general protection fault (trap 13), but softint's code says int $14. Why should this produce interrupt vector 13? What happens if the kernel actually allows softint's int $14 instruction to invoke the kernel's page fault handler (which is interrupt vector 14)?

Answer: I did not do anything to make user/softint program behave correctly - it already produces  a general protection fault.
This happens because user programms doesn't have permissions to access page fault (interrupt vector 14).
If I change permission level to 3 at SETGATE function call for 14th interrupt, then the page fault trap is produced.
